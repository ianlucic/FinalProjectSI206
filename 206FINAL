# FALL 2021
# SI 206
# Final Project
# Your name: Claire Zuo
# Your student id: 72712801
# Your email: zclaire@umich.edu
# List who you have worked with on this project: Ian Lucic, Sarayu Dandamudi 

from bs4 import BeautifulSoup
import sqlite3
import unittest
import requests
import json
import os
import pandas as pd
import io
from urllib.request import urlopen
import plotly.graph_objects as go
import plotly.express as px

def readDataFromAPI():
    base_url = 'https://api.usa.gov/crime/fbi/sapi/api/data/supplemental/burglary/states/{}/OFFENSE/2019/2020?API_KEY=iiHnOKfno2Mgkt5AynpvPpUQTEyxE77jo1RU8PIv'
    infodata = []
    stateslist = ['AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','PR','RI','SC','SD','TN','TX','UT','VT','VA','VI','WA','WV','WI','WY']
    for state in stateslist:
        url = base_url.format(state)
        r = requests.get(url)
        results = r.json()["results"]
        for result in results:
            result["state"] = state
            infodata.append(result)
    return infodata

def setUpDatabase(db_name):
    path = '/Users/clairezuo/Desktop/'
    conn = sqlite3.connect(path+'/'+db_name)
    cur = conn.cursor()
    return cur, conn

def setUpCrimeTable(cur, conn):
        #get the count of tables with the name
    cur.execute('SELECT count(*) FROM crime_rate_data')

    #if the count is 1, then table exists
    if len(cur.fetchall()) != 0 : 
        print('Table exists.')
        return
    else :
        print('Table does not exist.')
        cur.execute('DROP TABLE IF EXISTS crime_rate_data')
        cur.execute('CREATE TABLE crime_rate_data (state TEXT, offense TEXT, year INTEGER, stolen INTEGER)') #can remove offense
    conn.commit()

def storeData(infodata, cur, conn):
    cur.execute("SELECT * FROM crime_rate_data")
    num_rows = len(cur.fetchall())
    if num_rows == 102:
        return 
    else:
        for i in range(num_rows, num_rows+17):
            year = infodata[i]['data_year']
            stolen = infodata[i]['actual_count']
            state = infodata[i]['state']
            cur.execute("INSERT INTO crime_rate_data(state, offense, year, stolen)VALUES(?,?,?,?)",(state, "burglary", year, stolen))
    conn.commit()


# def plotdata(infodata):
#     year = infodata[i]['data_year']
#     stolen = infodata[i]['stolen_value_total']
#     state = infodata[i]['state']
#     df = px.data.gapminder().query("continent=='Oceania'")
#     fig = px.line(df, x= stolen, y= state, color= year )
#     fig.show()

# def plotdata(infodata):
#     state_list = []
#     crime_list = []
#     for item in infodata:
#         year = item['data_year']
#         if year == 2019:
#             state = item['state']
#             state_list.append(state)
#             stolen = item['stolen_value_total']
#             crime_list.append(stolen)
#         else:
#             break
#     print(state_list)
#     print(crime_list)


#     fig = px.choropleth(locations= state_list, locationmode="USA-states", color= crime_list, scope="usa")
#     fig.show()


# Add data

def plotdata1(infodata):  
    crime_2019 = [] 
    crime_2020 = []
    for item in infodata:
        year = item['data_year']
        if year == 2019:
            stolen = item['actual_count']
            crime_2019.append(stolen)
        elif year == 2020:
            stolen = item['actual_count']
            crime_2020.append(stolen)


    state = ['AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','PR','RI','SC','SD','TN','TX','UT','VT','VA','VI','WA','WV','WI','WY']


    fig = go.Figure()

    fig.add_trace(go.Scatter(x=state, y = crime_2019, name = '2019',
                         line=dict(color='lightgreen', width=3)))

    fig.add_trace(go.Scatter(x=state, y= crime_2020, name='2020',
                            line=dict(color='red', width=3)))
 
    fig.update_layout(title='Crime Rate By State',
                    xaxis_title='States',
                    yaxis_title='Burglaries')
    fig.show()

def averagecrimeperyear(infodata):
    stateslist = ['AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','PR','RI','SC','SD','TN','TX','UT','VT','VA','VI','WA','WV','WI','WY']
    total2019 = 0
    total2020 = 0
    # average2019 = 0
    # average2020 = 0
    for item in infodata:
        year = item['data_year']
        stolenlist =[]
        if year == 2019:
            stolen = item['actual_count']
            stolenlist.append(stolen)
            for item in stolenlist:
                total2019 += item
                average2019 = total2019 // len(stateslist)
        elif year == 2020:
            stolen = item['actual_count']
            stolenlist.append(stolen)
            for item in stolenlist:
                total2020 += item
                average2020 = total2020 // len(stateslist)

        #     total2020 = (total2020 + stolen) // len(stateslist)
    print("The average amount of burglaries per state in 2019 was: " + str(average2019))
    print("The average amount of burglaries per state in 2020 was: " + str(average2020))


# def delete_table:

    # for record in list_name:
    #     actual_count = record['actual_count']
    #     year = record['data_year']
    #     cur.execute("INSERT INTO crime_rate_data(state, offense, year, actual_count)VALUES(?,?,?,?)",(state, "burglary", year, actual_count))
    # conn.commit()



def main():
    infodata = readDataFromAPI()
    cur, conn = setUpDatabase('Database-Claire.db')
    setUpCrimeTable(cur, conn)
    storeData(infodata, cur, conn)
    plotdata1(infodata)
    averagecrimeperyear(infodata)


    conn.close()



    # plotdata(infodata)



if __name__ == "__main__":
    main()   